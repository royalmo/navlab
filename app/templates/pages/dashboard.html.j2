{% extends 'base/logged_in.html.j2' %}

{% block body %}

{% with
h1_text=_('Service list'),
left_button_text=_('New service'),
left_button_url=url_for('.servers.newserver'),
search_form=search_form
%}
{% include 'includes/title.html.j2' %}
{% endwith %}

<div id="card-list" class="flex justify-center items-center">
  {% if listlen < 1 %} 
  <div class="w-full bg-white rounded-lg flex items-center justify-center">
    <p class="text-center">{{_('Sorry! Looks like there are no matches with your search. Try again!')}}</p>
  </div>
  {%else%}

  {% for eachserver in serverlist %}
  <article>
    <a href="{{ url_for( '.servers.edit' , id=eachserver.id|int ) }}">
      <h2 class="p-2">{{ eachserver.name }}</h2>
      <div class="flex">
        <div class="w-8/12">
          <span class="text-red-500 text-xl"><i class="fa fa-times"></i> {{ _('Off') }}</span>
          <br />
          <br />
          <button class="bg-green-400 hover:bg-green-600 p-2 rounded text-white status-off status-button"
            data-id="{{ eachserver.id }}">
            <i class="fa fa-power-off"></i>
            {{ _('Start') }}
          </button>
        </div>
        <div class="w-4/12 flex justify-center items-center">
          <picture>
            <source srcset="{{ eachserver.image }}" />
            <img src="{{ url_for('static', filename='images/no-server-placeholder.png') }}" alt="placeholder"
              onerror="onError.call(this)" />
          </picture>
        </div>
      </div>
    </a>
  </article>
  {% endfor %}
  <article class="new items-center justify-center flex">
    <a href="{{ url_for('.servers.newserver') }}">
      <h2>+</h2>
    </a>
  </article>
  </div>
  {%endif%}

<script>
  function onError() {
    this.onerror = null;
    this.parentNode.children[0].srcset = this.parentNode.children[1].srcset = this.src;
  }
</script>

<script>
  const buttons = document.querySelectorAll('.status-button');

  buttons.forEach(button => {
    button.addEventListener('click', () => {
      event.preventDefault();

      if (button.classList.contains('status-on')) {
        turnOff(button);
      } else if (button.classList.contains('status-off')) {
        turnOn(button);
      }
    });
  });

  function turnOn(button) {
    const url = `/server/start/${button.dataset.id}`;

    fetch(url)
      .then(response => {
        if (response.ok) {
          button.innerHTML = '<i class="fa fa-power-off"></i> {{ _('Shutdown') }}';
          button.classList.replace('bg-green-400', 'bg-red-400');
          button.classList.replace('hover:bg-green-600', 'hover:bg-red-600');
          button.classList.remove('status-off');
          button.classList.add('status-on');
        } else {
          warningStatus(button);
        }
      })
      .catch(error => {
        console.log(error);
        warningStatus(button);
      });
  }

  function turnOff(button) {
    const url = `/server/stop/${button.dataset.id}`;

    fetch(url)
      .then(response => {
        if (response.ok) {
          button.innerHTML = '<i class="fa fa-power-off"></i> {{ _('Start') }}';
          button.classList.replace('bg-red-400', 'bg-green-400');
          button.classList.replace('hover:bg-red-600', 'hover:bg-green-600');
          button.classList.remove('status-on');
          button.classList.add('status-off');
        } else {
          warningStatus(button);
        }
      })
      .catch(error => {
        console.log(error);
        warningStatus(button);
      });
  }

  function warningStatus(button) {
    button.innerHTML = 'Warning';
    button.classList.replace('bg-green-400', 'bg-orange-400');
    button.classList.replace('hover:bg-green-600', 'hover:bg-orange-600');
  }
</script>

{% endblock %}